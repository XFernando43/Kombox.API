// <auto-generated />
using System;
using Kombox.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kombox.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Kombox.Models.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Name = "Jelwey"
                        },
                        new
                        {
                            CategoryId = 2,
                            Name = "Gaming"
                        });
                });

            modelBuilder.Entity("Kombox.Models.Models.ItemCart", b =>
                {
                    b.Property<int>("ItemCartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemCartId"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ShoppingCartId")
                        .HasColumnType("int");

                    b.Property<int>("count")
                        .HasColumnType("int");

                    b.HasKey("ItemCartId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ShoppingCartId");

                    b.ToTable("ItemCarts");
                });

            modelBuilder.Entity("Kombox.Models.Models.Product", b =>
                {
                    b.Property<int?>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("ProductId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            Description = "Collar de Fenix",
                            Name = "Collar",
                            Price = 100.0,
                            Stock = 0
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 1,
                            Description = "Brazalete de Thanos",
                            Name = "Brazalate",
                            Price = 100.0,
                            Stock = 0
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 1,
                            Description = "Anillo del Inifinito",
                            Name = "Anillo",
                            Price = 100.0,
                            Stock = 0
                        });
                });

            modelBuilder.Entity("Kombox.Models.Models.RolUser", b =>
                {
                    b.Property<int?>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("RolId"));

                    b.Property<string>("Access")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RolName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RolId");

                    b.ToTable("RolUsers");

                    b.HasData(
                        new
                        {
                            RolId = 1,
                            Access = "All",
                            RolName = "Admin"
                        },
                        new
                        {
                            RolId = 2,
                            Access = "lower",
                            RolName = "Employee"
                        },
                        new
                        {
                            RolId = 3,
                            Access = "public",
                            RolName = "Client"
                        });
                });

            modelBuilder.Entity("Kombox.Models.Models.ShoppingCart", b =>
                {
                    b.Property<int>("ShoppingCartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShoppingCartId"));

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.HasKey("ShoppingCartId");

                    b.HasIndex("IdUser");

                    b.ToTable("ShoppingCarts");
                });

            modelBuilder.Entity("Kombox.Models.Models.Usuario", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"));

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUser");

                    b.HasIndex("IdRol");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            IdUser = 1,
                            IdRol = 1,
                            password = "123",
                            usuario = "Fercho"
                        },
                        new
                        {
                            IdUser = 2,
                            IdRol = 1,
                            password = "123",
                            usuario = "German"
                        },
                        new
                        {
                            IdUser = 3,
                            IdRol = 1,
                            password = "123",
                            usuario = "Dai"
                        },
                        new
                        {
                            IdUser = 4,
                            IdRol = 1,
                            password = "123",
                            usuario = "Jorge"
                        });
                });

            modelBuilder.Entity("Kombox.Models.Models.ItemCart", b =>
                {
                    b.HasOne("Kombox.Models.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kombox.Models.Models.ShoppingCart", "ShoppingCart")
                        .WithMany()
                        .HasForeignKey("ShoppingCartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("ShoppingCart");
                });

            modelBuilder.Entity("Kombox.Models.Models.Product", b =>
                {
                    b.HasOne("Kombox.Models.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Kombox.Models.Models.ShoppingCart", b =>
                {
                    b.HasOne("Kombox.Models.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Kombox.Models.Models.Usuario", b =>
                {
                    b.HasOne("Kombox.Models.Models.RolUser", "RolUser")
                        .WithMany()
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RolUser");
                });
#pragma warning restore 612, 618
        }
    }
}
